name: Continuous Integration

on:
  push:
    branches: 
      - main
      - 'feature/**'
  pull_request:
    branches: 
      - main

# Comprehensive permissions
permissions:
  contents: read
  pull-requests: write
  security-events: write
  checks: write

jobs:
  # Security scanning job
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Security Scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Scan Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  # Linting and code quality job
  lint-and-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Lint Code
      run: npm run lint
    
    - name: Check Formatting
      run: npm run format:check

  # Testing job
  test:
    needs: [lint-and-quality, security-scan]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Unit Tests
      run: npm test
    
    - name: Run Integration Tests
      run: npm run test:integration

  # Build job
  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Build Project
      run: npm run build
      env:
        CONFIG: ${{ secrets.PROJECT_CONFIG }}

    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: .next/
        retention-days: 5

  # Deployment job (only for main branch)
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Build
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: .next/
    
    - name: Deploy to Hosting
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting
      env:
        ACCESS: ${{ secrets.DEPLOYMENT_ACCESS }}

  # Dependabot auto-merge
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot Metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: "${{ secrets.REPO_ACCESS }}"
      
      - name: Auto-merge Updates
        run: |
          if [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-minor" || "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-patch" ]]; then
            gh pr merge --auto --merge "$PR_URL"
          fi
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          REPO_ACCESS: ${{secrets.REPO_ACCESS}}
